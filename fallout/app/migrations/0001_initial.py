# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-06-26 00:49
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='', verbose_name='image')),
                ('is_player', models.BooleanField(default=False, verbose_name='joueur ?')),
                ('name', models.CharField(max_length=100, verbose_name='nom')),
                ('title', models.CharField(blank=True, max_length=200, null=True, verbose_name='titre')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('level', models.PositiveSmallIntegerField(default=1, verbose_name='niveau')),
                ('experience', models.PositiveIntegerField(default=0, verbose_name='expérience')),
                ('karma', models.SmallIntegerField(default=0, verbose_name='karma')),
                ('health', models.SmallIntegerField(default=0, verbose_name='santé')),
                ('action_points', models.SmallIntegerField(default=0, verbose_name="points d'action")),
                ('irradiation', models.SmallIntegerField(default=0, verbose_name='irradiation')),
                ('skill_points', models.PositiveSmallIntegerField(default=0, verbose_name='points de compétences')),
                ('strength', models.PositiveSmallIntegerField(default=5, verbose_name='force')),
                ('perception', models.PositiveSmallIntegerField(default=5, verbose_name='perception')),
                ('endurance', models.PositiveSmallIntegerField(default=5, verbose_name='endurance')),
                ('charisma', models.PositiveSmallIntegerField(default=5, verbose_name='charisme')),
                ('intelligence', models.PositiveSmallIntegerField(default=5, verbose_name='intelligence')),
                ('agility', models.PositiveSmallIntegerField(default=5, verbose_name='agilité')),
                ('luck', models.PositiveSmallIntegerField(default=5, verbose_name='chance')),
                ('max_health', models.SmallIntegerField(default=0, verbose_name='santé maximale')),
                ('max_action_points', models.SmallIntegerField(default=0, verbose_name="points d'action max.")),
                ('damage_resistance', models.SmallIntegerField(default=0, verbose_name='résistance aux dégâts')),
                ('damage_threshold', models.SmallIntegerField(default=0, verbose_name='seuil de dégâts')),
                ('evade', models.SmallIntegerField(default=0, verbose_name='esquive')),
                ('carry_weight', models.SmallIntegerField(default=0, verbose_name='charge maximale')),
                ('melee_damage', models.SmallIntegerField(default=0, verbose_name='attaque en mélée')),
                ('poison_resistance', models.SmallIntegerField(default=0, verbose_name='résistance aux poisons')),
                ('radiation_resistance', models.SmallIntegerField(default=0, verbose_name='résistance aux radiations')),
                ('gas_resistance', models.SmallIntegerField(default=0, verbose_name='résistance aux gaz')),
                ('fire_resistance', models.SmallIntegerField(default=0, verbose_name='résistance au feu')),
                ('electricity_resistance', models.SmallIntegerField(default=0, verbose_name="résistance à l'électricité")),
                ('sequence', models.SmallIntegerField(default=0, verbose_name='initiative')),
                ('healing_rate', models.SmallIntegerField(default=0, verbose_name='taux de regénération')),
                ('critical_chance', models.SmallIntegerField(default=0, verbose_name='chance de critique')),
                ('small_guns', models.SmallIntegerField(default=0, verbose_name='armes à feu légères')),
                ('big_guns', models.SmallIntegerField(default=0, verbose_name='armes à feu lourdes')),
                ('energy_weapons', models.SmallIntegerField(default=0, verbose_name='armes à énergie')),
                ('unarmed', models.SmallIntegerField(default=0, verbose_name='à mains nues')),
                ('melee_weapons', models.SmallIntegerField(default=0, verbose_name='armes de mélée')),
                ('throwing', models.SmallIntegerField(default=0, verbose_name='armes de lancer')),
                ('first_aid', models.SmallIntegerField(default=0, verbose_name='premiers secours')),
                ('doctor', models.SmallIntegerField(default=0, verbose_name='médecine')),
                ('chems', models.SmallIntegerField(default=0, verbose_name='chimie')),
                ('sneak', models.SmallIntegerField(default=0, verbose_name='discrétion')),
                ('lockpick', models.SmallIntegerField(default=0, verbose_name='crochetage')),
                ('steal', models.SmallIntegerField(default=0, verbose_name='pickpocket')),
                ('traps', models.SmallIntegerField(default=0, verbose_name='pièges')),
                ('science', models.SmallIntegerField(default=0, verbose_name='science')),
                ('repair', models.SmallIntegerField(default=0, verbose_name='réparation')),
                ('speech', models.SmallIntegerField(default=0, verbose_name='discours')),
                ('barter', models.SmallIntegerField(default=0, verbose_name='marchandage')),
                ('gambling', models.SmallIntegerField(default=0, verbose_name='hasard')),
                ('survival', models.SmallIntegerField(default=0, verbose_name='survie')),
                ('tag_1', models.CharField(choices=[('small_guns', 'armes à feu légères'), ('big_guns', 'armes à feu lourdes'), ('energy_weapons', 'armes à énergie'), ('unarmed', 'à mains nues'), ('melee_weapons', 'armes de mélée'), ('throwing', 'armes de lancer'), ('first_aid', 'premiers secours'), ('doctor', 'médecine'), ('chems', 'chimie'), ('sneak', 'discrétion'), ('lockpick', 'crochetage'), ('steal', 'pickpocket'), ('traps', 'pièges'), ('science', 'science'), ('repair', 'réparation'), ('speech', 'discours'), ('barter', 'marchandage'), ('gambling', 'hasard'), ('survival', 'survie')], max_length=20, verbose_name='spécialité 1')),
                ('tag_2', models.CharField(choices=[('small_guns', 'armes à feu légères'), ('big_guns', 'armes à feu lourdes'), ('energy_weapons', 'armes à énergie'), ('unarmed', 'à mains nues'), ('melee_weapons', 'armes de mélée'), ('throwing', 'armes de lancer'), ('first_aid', 'premiers secours'), ('doctor', 'médecine'), ('chems', 'chimie'), ('sneak', 'discrétion'), ('lockpick', 'crochetage'), ('steal', 'pickpocket'), ('traps', 'pièges'), ('science', 'science'), ('repair', 'réparation'), ('speech', 'discours'), ('barter', 'marchandage'), ('gambling', 'hasard'), ('survival', 'survie')], max_length=20, verbose_name='spécialité 2')),
                ('tag_3', models.CharField(choices=[('small_guns', 'armes à feu légères'), ('big_guns', 'armes à feu lourdes'), ('energy_weapons', 'armes à énergie'), ('unarmed', 'à mains nues'), ('melee_weapons', 'armes de mélée'), ('throwing', 'armes de lancer'), ('first_aid', 'premiers secours'), ('doctor', 'médecine'), ('chems', 'chimie'), ('sneak', 'discrétion'), ('lockpick', 'crochetage'), ('steal', 'pickpocket'), ('traps', 'pièges'), ('science', 'science'), ('repair', 'réparation'), ('speech', 'discours'), ('barter', 'marchandage'), ('gambling', 'hasard'), ('survival', 'survie')], max_length=20, verbose_name='spécialité 3')),
                ('tag_4', models.CharField(blank=True, choices=[('small_guns', 'armes à feu légères'), ('big_guns', 'armes à feu lourdes'), ('energy_weapons', 'armes à énergie'), ('unarmed', 'à mains nues'), ('melee_weapons', 'armes de mélée'), ('throwing', 'armes de lancer'), ('first_aid', 'premiers secours'), ('doctor', 'médecine'), ('chems', 'chimie'), ('sneak', 'discrétion'), ('lockpick', 'crochetage'), ('steal', 'pickpocket'), ('traps', 'pièges'), ('science', 'science'), ('repair', 'réparation'), ('speech', 'discours'), ('barter', 'marchandage'), ('gambling', 'hasard'), ('survival', 'survie')], max_length=20, null=True, verbose_name='spécialité 4')),
                ('tag_5', models.CharField(blank=True, choices=[('small_guns', 'armes à feu légères'), ('big_guns', 'armes à feu lourdes'), ('energy_weapons', 'armes à énergie'), ('unarmed', 'à mains nues'), ('melee_weapons', 'armes de mélée'), ('throwing', 'armes de lancer'), ('first_aid', 'premiers secours'), ('doctor', 'médecine'), ('chems', 'chimie'), ('sneak', 'discrétion'), ('lockpick', 'crochetage'), ('steal', 'pickpocket'), ('traps', 'pièges'), ('science', 'science'), ('repair', 'réparation'), ('speech', 'discours'), ('barter', 'marchandage'), ('gambling', 'hasard'), ('survival', 'survie')], max_length=20, null=True, verbose_name='spécialité 5')),
                ('hit_points_per_level', models.SmallIntegerField(default=0, verbose_name='points de santé par niveau')),
                ('skill_points_per_level', models.SmallIntegerField(default=0, verbose_name='points de compétence par niveau')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='utilisateur')),
            ],
            options={
                'verbose_name': 'personnage',
                'verbose_name_plural': 'personnages',
            },
        ),
        migrations.CreateModel(
            name='Effect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'effet',
                'verbose_name_plural': 'effets',
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='nom')),
                ('image', models.ImageField(blank=True, null=True, upload_to='', verbose_name='image')),
                ('type', models.CharField(choices=[('weapon', 'arme'), ('ammo', 'munition'), ('apparel', 'vêtement'), ('food', 'nourriture'), ('chem', 'drogue'), ('misc', 'autre')], max_length=7, verbose_name='type')),
                ('value', models.PositiveIntegerField(default=0, verbose_name='valeur')),
                ('weight', models.PositiveSmallIntegerField(default=0, verbose_name='poids')),
            ],
            options={
                'verbose_name': 'objet',
                'verbose_name_plural': 'objets',
            },
        ),
        migrations.CreateModel(
            name='Ammo',
            fields=[
                ('item_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.Item')),
                ('evasion_modifier', models.SmallIntegerField(default=0, verbose_name="modificateur d'esquive")),
                ('damage_modifier', models.SmallIntegerField(default=0, verbose_name='modificateur de dégâts')),
                ('resistance_modifier', models.SmallIntegerField(default=0, verbose_name='modificateur de résistance')),
            ],
            options={
                'verbose_name': 'munition',
                'verbose_name_plural': 'munitions',
            },
            bases=('app.item',),
        ),
        migrations.CreateModel(
            name='Apparel',
            fields=[
                ('item_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.Item')),
                ('evade', models.SmallIntegerField(default=0, verbose_name='esquive')),
                ('resistance_normal', models.PositiveSmallIntegerField(default=0, verbose_name='résistance dégâts normaux')),
                ('resistance_fire', models.PositiveSmallIntegerField(default=0, verbose_name='résistance dégâts feu')),
                ('resistance_laser', models.PositiveSmallIntegerField(default=0, verbose_name='résistance dégâts laser')),
                ('resistance_plasma', models.PositiveSmallIntegerField(default=0, verbose_name='résistance dégâts plasma')),
                ('resistance_explosive', models.PositiveSmallIntegerField(default=0, verbose_name='résistance dégâts explosifs')),
            ],
            options={
                'verbose_name': 'vêtement',
                'verbose_name_plural': 'vêtements',
            },
            bases=('app.item',),
        ),
        migrations.CreateModel(
            name='Weapon',
            fields=[
                ('item_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.Item')),
                ('damage_type', models.CharField(choices=[('normal', 'normal'), ('fire', 'feu'), ('laser', 'laser'), ('plasma', 'plasma'), ('explosive', 'explosif')], max_length=10, verbose_name='type de dégâts')),
                ('damage_dice_count', models.PositiveSmallIntegerField(default=0, verbose_name='nombre de dés')),
                ('damage_dice_value', models.PositiveSmallIntegerField(default=0, verbose_name='valeur de dé')),
                ('damage_bonus', models.PositiveSmallIntegerField(default=0, verbose_name='dégâts bonus')),
                ('range', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='portée')),
                ('clip_size', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='taille du chargeur')),
                ('ap_cost_normal', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='coût PA normal')),
                ('ap_cost_target', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='coût PA ciblé')),
                ('ap_cost_burst', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='coût PA rafale')),
                ('burst_count', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='munitions en rafale')),
                ('min_stength', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='force minimum')),
                ('ammo', models.ManyToManyField(blank=True, to='app.Ammo', verbose_name='type de munition')),
            ],
            options={
                'verbose_name': 'arme',
                'verbose_name_plural': 'armes',
            },
            bases=('app.item',),
        ),
        migrations.AddField(
            model_name='item',
            name='effects_target',
            field=models.ManyToManyField(blank=True, related_name='_item_effects_target_+', to='app.Effect', verbose_name='effets sur cible'),
        ),
        migrations.AddField(
            model_name='item',
            name='effects_use',
            field=models.ManyToManyField(blank=True, related_name='_item_effects_use_+', to='app.Effect', verbose_name='effets quand utilisé'),
        ),
        migrations.AddField(
            model_name='item',
            name='effects_wear',
            field=models.ManyToManyField(blank=True, related_name='_item_effects_wear_+', to='app.Effect', verbose_name='effets quand porté'),
        ),
    ]
